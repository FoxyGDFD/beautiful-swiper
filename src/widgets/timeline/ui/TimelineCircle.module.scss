@use "sass:map";
@use '@shared/styles/mixins';
@use "@shared/styles/variables";

.container {
  @include mixins.flex-center;
  position: relative;
}

.digits {
  z-index: 2;
  pointer-events: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin-top: -15px;
  gap: 5rem;

  @include mixins.flex-center;

  .text {
    font-size: 200px;
    font-weight: variables.$font-weight-bold;
  
    &.start {
      color: variables.$iris-100;
    }

    &.end {
      color: variables.$fucshia-100;
    }
  } 
}

.circle {
  z-index: 10;
  position: relative;
  width: 530px;
  height: 530px;
  border-radius: 50%;
  border: 2px solid variables.$black-blue_20;
  transition: transform 1s cubic-bezier(0.25, 1, 0.5, 1);
  
  @include mixins.flex-center;
}

.button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 3.625rem;
  height: 3.625rem;
  margin: -1.8rem;
  border: 1px solid variables.$button-border;
  border-radius: 30px;
  background: variables.$black-blue;
  color: variables.$black-blue;
  font-size: 1.125rem;
  transition: transform 1s cubic-bezier(0.25, 1, 0.5, 1);
  cursor: pointer;

  transform: 
    rotate(var(--angle)) 
    translate(265px) 
    rotate(calc(-1 * var(--angle) - var(--rotation, 0deg)))
    scale(0.1);

  &:hover, &:focus, &:active {
    transform: 
      rotate(var(--angle)) 
      translate(265px) 
      rotate(calc(-1 * var(--angle) - var(--rotation, 0deg))) 
      scale(1);
    background: variables.$gray-50;
    z-index: 10;
  }

  &.active {
    background: variables.$gray-50;
    transform: 
      rotate(var(--angle)) 
      translate(265px) 
      rotate(calc(-1 * var(--angle) - var(--rotation, 0deg))) 
      scale(1);
  }

  @include mixins.flex-center;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@include mixins.respond-to-max(lg) {
  .circle {
    width: 360px;
    height: 360px;
    
    .button {
      
      transform: 
        rotate(var(--angle)) 
        translate(180px) 
        rotate(calc(-1 * var(--angle) - var(--rotation, 0deg)))
        scale(0.1);
      
      &:hover, &:focus, &:active  {
        transform: 
          rotate(var(--angle)) 
          translate(180px) 
          rotate(calc(-1 * var(--angle) - var(--rotation, 0deg)))
          scale(1);
      }
      
      &.active {
        transform: 
          rotate(var(--angle)) 
          translate(180px) 
          rotate(calc(-1 * var(--angle) - var(--rotation, 0deg))) 
          scale(1);
      }
    }
  }
}

@include mixins.respond-to-max(md) {
  .circle {
    display: none;
  }
}